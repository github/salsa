name: verify artifact

on:
  workflow_call:
    inputs:
      artifact-path:
        required: false
        type: string
        description: "the path to all the artifacts to verify"
      owner:
        required: false
        type: string
        description: "the owner of the repository that signed the artifact"
        default: ${{ github.repository_owner }}
      repo:
        required: false
        type: string
        description: "the name of the current repository this workflow is running in"
        default: ${{ github.event.repository.name }}
      signing-owner:
        required: false
        type: string
        description: "the owner of the repository that is hosting the reusable workflow for signing"
        default: ${{ github.repository_owner }}
      signing-repo:
        required: false
        type: string
        description: "the name of the repository that is hosting the reusable workflow for signing"
        default: salsa
      workflow_name:
        required: false
        type: string
        description: "the name of the workflow that signed the artifact"
        default: "sign-artifact.yml"

      # inputs for download-artifact
      download-artifact:
        required: false
        type: boolean
        default: true
        description: "uses download-artifact action to download artifacts from a previous job"
      artifact-ids:
        required: false
        type: string
        description: "the id of the artifact to download (preferred over name)"
      name:
        required: false
        type: string
        description: "name of the artifact to download (you should use artifact-id instead)"

jobs:
  verify:
    runs-on: ubuntu-latest
    permissions: {}

    steps:
      # a convenience step to download artifacts from a previous job
      - name: actions/download-artifact
        if: ${{ inputs.download-artifact }}
        uses: actions/download-artifact@54124fbd881f8ce794405a06896c93c49c17463e
        with:
          name: ${{ inputs.name }}
          artifact-ids: ${{ inputs.artifact-ids }}

      - name: list artifacts
        if : ${{ inputs.download-artifact }}
        run: ls -R

      - name: verify
        env:
          OWNER: ${{ inputs.owner }}
          REPO: ${{ inputs.repo }}
          SIGNING_OWNER: ${{ inputs.signing-owner }}
          SIGNING_REPO: ${{ inputs.signing-repo }}
          ARTIFACT_PATH: ${{ inputs.artifact-path }}
          WORKFLOW_NAME: ${{ inputs.workflow_name }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -z "$ARTIFACT_PATH" ]; then
            echo "No artifact path specified. Using current directory."
            ARTIFACT_PATH="."
          fi
          
          # Convert OWNER, REPO, and SIGNING_REPO, SIGNING_OWNER to lowercase as expected by the command
          OWNER=$(echo "$OWNER" | tr '[:upper:]' '[:lower:]')
          REPO=$(echo "$REPO" | tr '[:upper:]' '[:lower:]')
          SIGNING_OWNER=$(echo "$SIGNING_OWNER" | tr '[:upper:]' '[:lower:]')
          SIGNING_REPO=$(echo "$SIGNING_REPO" | tr '[:upper:]' '[:lower:]')
          
          # Check if the artifact path is a file or directory
          if [ -f "$ARTIFACT_PATH" ]; then
            echo "Artifact path is a single file: $ARTIFACT_PATH"
            echo "Verifying file: $ARTIFACT_PATH"
            
            # Log the command that will be executed
            echo "Executing command: gh attestation verify \"$ARTIFACT_PATH\" --repo ${OWNER}/${REPO} --signer-workflow ${SIGNING_OWNER}/${SIGNING_REPO}/.github/workflows/${WORKFLOW_NAME}"
            
            # Run the command
            gh attestation verify "$ARTIFACT_PATH" --repo ${OWNER}/${REPO} --signer-workflow ${SIGNING_OWNER}/${SIGNING_REPO}/.github/workflows/${WORKFLOW_NAME}
          elif [ -d "$ARTIFACT_PATH" ]; then
            echo "Artifact path is a directory: $ARTIFACT_PATH"
            echo "Scanning for files in $ARTIFACT_PATH"
            
            # Find all regular files in the artifact path recursively
            find "$ARTIFACT_PATH" -type f | while read -r file; do
              echo "Verifying file: $file"
              
              # Log the command that will be executed
              echo "Executing command: gh attestation verify \"$file\" --repo ${OWNER}/${REPO} --signer-workflow ${SIGNING_OWNER}/${SIGNING_REPO}/.github/workflows/${WORKFLOW_NAME}"
              
              # Run the command
              gh attestation verify "$file" --repo ${OWNER}/${REPO} --signer-workflow ${SIGNING_OWNER}/${SIGNING_REPO}/.github/workflows/${WORKFLOW_NAME}
            done
          else
            echo "Error: Artifact path '$ARTIFACT_PATH' does not exist or is not accessible"
            exit 1
          fi
